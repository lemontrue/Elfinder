Crypt = Crypt or {}

Crypt.Preloader =
  nodes: []
  FadeDuration: 600
  Block: ($el) ->
    $el = if ! !$el then $el else $('#Layout')
    if !$el.length
      return false
    Crypt.Preloader.UnBlock $el, fast: true
    Crypt.Preloader._addNodeToStack $el, 'container'
    $preloaderLayout = $('<div>').addClass('el-preloader-layout js-preloader-layout')
    $preloaderElement = $('<div>').addClass('el-preloader-large preloader js-preloader')
    containerHeight = $el.outerHeight()
    if containerHeight >= 100
      $el.append($preloaderLayout).append $preloaderElement
    return
  UnBlock: ($el, options) ->
    $el = if ! !$el then $el else $('#Layout')
    options = options or {}
    if !$el.length
      return false
    $preloaderElement = $el.find('.js-preloader')
    $preloaderLayout = $el.find('.js-preloader-layout')
    if $preloaderElement.length or $preloaderLayout.length
      $preloaderElement.fadeOut(
        0
        ->
          $(this).remove()
          return
      )
      $preloaderLayout.fadeOut(
        0
        ->
          $(this).remove()
          return
      )
    @_removeNodeFromStack $el
    return
  UnBlockAll: ->
    $.each Crypt.Preloader.nodes, (index, item) ->
      if !_.isUndefined(item)
        switch item.type
          when 'ui'
            Crypt.Preloader.UnBlockUI fast: true
          when 'container', 'mini'
            Crypt.Preloader.UnBlock item.node, fast: true
      return
    return
  _addNodeToStack: ($node, blockType) ->
    Crypt.Preloader.nodes.push
      type: blockType
      node: if ! !$node then $node else null
    return
  _removeNodeFromStack: ($node) ->
    key = null
    $node = if ! !$node then $node else null
    $.each Crypt.Preloader.nodes, (index, item) ->
      if item.node == $node
        key = index
        return
      return
    Crypt.Preloader.nodes.splice key, 1
    return


# ---
# generated by js2coffee 2.0.1