//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CryptxOnline.Web.AuthorizeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class LoginResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AcceptWaitingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AcceptType AuthAcceptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AuthorizeServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> KobilAuthEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.LoginResponse.KobilOptions KobilOptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RoleChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AcceptWaitingTime {
            get {
                return this.AcceptWaitingTimeField;
            }
            set {
                if ((this.AcceptWaitingTimeField.Equals(value) != true)) {
                    this.AcceptWaitingTimeField = value;
                    this.RaisePropertyChanged("AcceptWaitingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AcceptType AuthAcceptType {
            get {
                return this.AuthAcceptTypeField;
            }
            set {
                if ((this.AuthAcceptTypeField.Equals(value) != true)) {
                    this.AuthAcceptTypeField = value;
                    this.RaisePropertyChanged("AuthAcceptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AuthorizeServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> KobilAuthEnabled {
            get {
                return this.KobilAuthEnabledField;
            }
            set {
                if ((this.KobilAuthEnabledField.Equals(value) != true)) {
                    this.KobilAuthEnabledField = value;
                    this.RaisePropertyChanged("KobilAuthEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.LoginResponse.KobilOptions KobilOption {
            get {
                return this.KobilOptionField;
            }
            set {
                if ((object.ReferenceEquals(this.KobilOptionField, value) != true)) {
                    this.KobilOptionField = value;
                    this.RaisePropertyChanged("KobilOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RoleChangeDateTime {
            get {
                return this.RoleChangeDateTimeField;
            }
            set {
                if ((this.RoleChangeDateTimeField.Equals(value) != true)) {
                    this.RoleChangeDateTimeField = value;
                    this.RaisePropertyChanged("RoleChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Token {
            get {
                return this.TokenField;
            }
            set {
                if ((this.TokenField.Equals(value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="LoginResponse.KobilOptions", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        [System.SerializableAttribute()]
        public partial class KobilOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int KobilTransactionWaitingTimeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private int PollingIntervalField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private CryptxOnline.Web.AuthorizeService.KobilStatus StatusField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int KobilTransactionWaitingTime {
                get {
                    return this.KobilTransactionWaitingTimeField;
                }
                set {
                    if ((this.KobilTransactionWaitingTimeField.Equals(value) != true)) {
                        this.KobilTransactionWaitingTimeField = value;
                        this.RaisePropertyChanged("KobilTransactionWaitingTime");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public int PollingInterval {
                get {
                    return this.PollingIntervalField;
                }
                set {
                    if ((this.PollingIntervalField.Equals(value) != true)) {
                        this.PollingIntervalField = value;
                        this.RaisePropertyChanged("PollingInterval");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public CryptxOnline.Web.AuthorizeService.KobilStatus Status {
                get {
                    return this.StatusField;
                }
                set {
                    if ((this.StatusField.Equals(value) != true)) {
                        this.StatusField = value;
                        this.RaisePropertyChanged("Status");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizeServiceError", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Error")]
    [System.SerializableAttribute()]
    public partial class AuthorizeServiceError : ElFinder.CryptxService.ServiceError {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AcceptType", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    public enum AcceptType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sms = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kobil = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KobilStatus", Namespace="http://schemas.datacontract.org/2004/07/KobilConnector.Helper")]
    public enum KobilStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Off = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accept = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reject = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitDevice = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitResult = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckTokenResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class CheckTokenResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RoleChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CryptxOnline.Web.AuthorizeService.UserRoles> RolesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OK {
            get {
                return this.OKField;
            }
            set {
                if ((this.OKField.Equals(value) != true)) {
                    this.OKField = value;
                    this.RaisePropertyChanged("OK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RoleChangeDateTime {
            get {
                return this.RoleChangeDateTimeField;
            }
            set {
                if ((this.RoleChangeDateTimeField.Equals(value) != true)) {
                    this.RoleChangeDateTimeField = value;
                    this.RaisePropertyChanged("RoleChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CryptxOnline.Web.AuthorizeService.UserRoles> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRoles", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
    public enum UserRoles : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GroupAdmin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SysAdmin = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PhoneChangeResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class PhoneChangeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AuthorizeServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PinWaitingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SmsConfirmationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<CryptxOnline.Web.AuthorizeService.PhoneChangeResponse.ResponseStatus> StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AuthorizeServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PinWaitingTime {
            get {
                return this.PinWaitingTimeField;
            }
            set {
                if ((this.PinWaitingTimeField.Equals(value) != true)) {
                    this.PinWaitingTimeField = value;
                    this.RaisePropertyChanged("PinWaitingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SmsConfirmationID {
            get {
                return this.SmsConfirmationIDField;
            }
            set {
                if ((this.SmsConfirmationIDField.Equals(value) != true)) {
                    this.SmsConfirmationIDField = value;
                    this.RaisePropertyChanged("SmsConfirmationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<CryptxOnline.Web.AuthorizeService.PhoneChangeResponse.ResponseStatus> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="PhoneChangeResponse.ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        public enum ResponseStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ok = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Exist = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PhoneChanged = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Failure = 3,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailChangeResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class EmailChangeResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AuthorizeServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PinWaitingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SmsConfirmationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<CryptxOnline.Web.AuthorizeService.EmailChangeResponse.ResponseStatus> StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AuthorizeServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PinWaitingTime {
            get {
                return this.PinWaitingTimeField;
            }
            set {
                if ((this.PinWaitingTimeField.Equals(value) != true)) {
                    this.PinWaitingTimeField = value;
                    this.RaisePropertyChanged("PinWaitingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SmsConfirmationID {
            get {
                return this.SmsConfirmationIDField;
            }
            set {
                if ((this.SmsConfirmationIDField.Equals(value) != true)) {
                    this.SmsConfirmationIDField = value;
                    this.RaisePropertyChanged("SmsConfirmationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<CryptxOnline.Web.AuthorizeService.EmailChangeResponse.ResponseStatus> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="EmailChangeResponse.ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        public enum ResponseStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Exist = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmsConfirmationSent = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            EmailConfirmationSent = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            EmailConfirmationAttemptExceeded = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            EmailChanged = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Failed = 5,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SmsConfirmationResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class SmsConfirmationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AuthorizeServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<CryptxOnline.Web.AuthorizeService.SmsConfirmationResponse.ResponseStatus> StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AuthorizeServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<CryptxOnline.Web.AuthorizeService.SmsConfirmationResponse.ResponseStatus> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="SmsConfirmationResponse.ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        public enum ResponseStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ok = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Fail = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            WrongPin = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Expire = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NotExist = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            AttemptCountExceeded = 5,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailChangeConfirmationResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class EmailChangeConfirmationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AuthorizeServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<CryptxOnline.Web.AuthorizeService.EmailChangeConfirmationResponse.ResponseStatus> StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AuthorizeServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<CryptxOnline.Web.AuthorizeService.EmailChangeConfirmationResponse.ResponseStatus> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="EmailChangeConfirmationResponse.ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        public enum ResponseStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Ok = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ConfirmationExpire = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            EmailAlreadyUsed = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ConfirmationNotFound = 3,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KobilAuthResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class KobilAuthResponse : ElFinder.CryptxService.OldServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.KobilStatus StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.KobilStatus Status {
            get {
                return this.StatusField;
            }
            set {
                this.StatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class UserInfoResponse : ElFinder.CryptxService.OldServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.UserInfo UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserRootField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebDavDirField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebDavRootDirField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.UserInfo User {
            get {
                return this.UserField;
            }
            set {
                this.UserField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserRoot {
            get {
                return this.UserRootField;
            }
            set {
                this.UserRootField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebDavDir {
            get {
                return this.WebDavDirField;
            }
            set {
                this.WebDavDirField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebDavRootDir {
            get {
                return this.WebDavRootDirField;
            }
            set {
                this.WebDavRootDirField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTempPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PasswordExpireTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CryptxOnline.Web.AuthorizeService.UserRoles> UserRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.UserStatuses UserStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTempPassword {
            get {
                return this.IsTempPasswordField;
            }
            set {
                if ((this.IsTempPasswordField.Equals(value) != true)) {
                    this.IsTempPasswordField = value;
                    this.RaisePropertyChanged("IsTempPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PasswordExpireTime {
            get {
                return this.PasswordExpireTimeField;
            }
            set {
                if ((this.PasswordExpireTimeField.Equals(value) != true)) {
                    this.PasswordExpireTimeField = value;
                    this.RaisePropertyChanged("PasswordExpireTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CryptxOnline.Web.AuthorizeService.UserRoles> UserRoles {
            get {
                return this.UserRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserRolesField, value) != true)) {
                    this.UserRolesField = value;
                    this.RaisePropertyChanged("UserRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.UserStatuses UserStatus {
            get {
                return this.UserStatusField;
            }
            set {
                if ((this.UserStatusField.Equals(value) != true)) {
                    this.UserStatusField = value;
                    this.RaisePropertyChanged("UserStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStatuses", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
    public enum UserStatuses : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Confirmed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotActive = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class AccountResponse : ElFinder.CryptxService.OldServiceResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.Account AccountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.Account Account {
            get {
                return this.AccountField;
            }
            set {
                this.AccountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AcceptType AcceptTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowTransmissionFromCryptogrammUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasMyCertField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool KobilAuthPassRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReceiveMessageFromSupportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecoveryCheckPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.RecoveryType RecoveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SubscribeToNewsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AcceptType AcceptType {
            get {
                return this.AcceptTypeField;
            }
            set {
                if ((this.AcceptTypeField.Equals(value) != true)) {
                    this.AcceptTypeField = value;
                    this.RaisePropertyChanged("AcceptType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowTransmissionFromCryptogrammUser {
            get {
                return this.AllowTransmissionFromCryptogrammUserField;
            }
            set {
                if ((this.AllowTransmissionFromCryptogrammUserField.Equals(value) != true)) {
                    this.AllowTransmissionFromCryptogrammUserField = value;
                    this.RaisePropertyChanged("AllowTransmissionFromCryptogrammUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailConfirmed {
            get {
                return this.EmailConfirmedField;
            }
            set {
                if ((this.EmailConfirmedField.Equals(value) != true)) {
                    this.EmailConfirmedField = value;
                    this.RaisePropertyChanged("EmailConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasMyCert {
            get {
                return this.HasMyCertField;
            }
            set {
                if ((this.HasMyCertField.Equals(value) != true)) {
                    this.HasMyCertField = value;
                    this.RaisePropertyChanged("HasMyCert");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool KobilAuthPassRequired {
            get {
                return this.KobilAuthPassRequiredField;
            }
            set {
                if ((this.KobilAuthPassRequiredField.Equals(value) != true)) {
                    this.KobilAuthPassRequiredField = value;
                    this.RaisePropertyChanged("KobilAuthPassRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReceiveMessageFromSupport {
            get {
                return this.ReceiveMessageFromSupportField;
            }
            set {
                if ((this.ReceiveMessageFromSupportField.Equals(value) != true)) {
                    this.ReceiveMessageFromSupportField = value;
                    this.RaisePropertyChanged("ReceiveMessageFromSupport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecoveryCheckPhone {
            get {
                return this.RecoveryCheckPhoneField;
            }
            set {
                if ((this.RecoveryCheckPhoneField.Equals(value) != true)) {
                    this.RecoveryCheckPhoneField = value;
                    this.RaisePropertyChanged("RecoveryCheckPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.RecoveryType RecoveryType {
            get {
                return this.RecoveryTypeField;
            }
            set {
                if ((this.RecoveryTypeField.Equals(value) != true)) {
                    this.RecoveryTypeField = value;
                    this.RaisePropertyChanged("RecoveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SubscribeToNews {
            get {
                return this.SubscribeToNewsField;
            }
            set {
                if ((this.SubscribeToNewsField.Equals(value) != true)) {
                    this.SubscribeToNewsField = value;
                    this.RaisePropertyChanged("SubscribeToNews");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecoveryType", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
    public enum RecoveryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ban = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sms = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Kobil = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Email = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResendPinResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class ResendPinResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AuthorizeServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SuccessField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AuthorizeServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                if ((this.SuccessField.Equals(value) != true)) {
                    this.SuccessField = value;
                    this.RaisePropertyChanged("Success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetKobilActivationResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class GetKobilActivationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.AuthorizeServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.GetKobilActivationResponse.GetKobilActivationStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.AuthorizeServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.GetKobilActivationResponse.GetKobilActivationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="GetKobilActivationResponse.GetKobilActivationStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        public enum GetKobilActivationStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SENDVIAEMAIL = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SENDVIASMS = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            FAILURE = 2,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.AuthorizeService.AuthorizeServiceError))]
    public partial class ServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ElFinder.CryptxService.ServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.AuthorizeService.ServiceResponse.ServiceStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ElFinder.CryptxService.ServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.AuthorizeService.ServiceResponse.ServiceStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="ServiceResponse.ServiceStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        public enum ServiceStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Success = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Failed = 1,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserNotificationResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class GetUserNotificationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CryptxOnline.Web.AuthorizeService.GetUserNotificationResponse.Notification> UserNotificationsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CryptxOnline.Web.AuthorizeService.GetUserNotificationResponse.Notification> UserNotifications {
            get {
                return this.UserNotificationsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNotificationsField, value) != true)) {
                    this.UserNotificationsField = value;
                    this.RaisePropertyChanged("UserNotifications");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="GetUserNotificationResponse.Notification", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        [System.SerializableAttribute()]
        public partial class Notification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid IdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private CryptxOnline.Web.AuthorizeService.UserNotificationTypes TypeField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid Id {
                get {
                    return this.IdField;
                }
                set {
                    if ((this.IdField.Equals(value) != true)) {
                        this.IdField = value;
                        this.RaisePropertyChanged("Id");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public CryptxOnline.Web.AuthorizeService.UserNotificationTypes Type {
                get {
                    return this.TypeField;
                }
                set {
                    if ((this.TypeField.Equals(value) != true)) {
                        this.TypeField = value;
                        this.RaisePropertyChanged("Type");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserNotificationTypes", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
    public enum UserNotificationTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dialog = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthorizeService.IAuthorizeService")]
    public interface IAuthorizeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/Login", ReplyAction="http://tempuri.org/IAuthorizeService/LoginResponse")]
        CryptxOnline.Web.AuthorizeService.LoginResponse Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/CheckToken", ReplyAction="http://tempuri.org/IAuthorizeService/CheckTokenResponse")]
        CryptxOnline.Web.AuthorizeService.CheckTokenResponse CheckToken(System.Guid token, System.Nullable<System.DateTime> roleChangeDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/PhoneChangeBegin", ReplyAction="http://tempuri.org/IAuthorizeService/PhoneChangeBeginResponse")]
        CryptxOnline.Web.AuthorizeService.PhoneChangeResponse PhoneChangeBegin(string phoneNumber, System.Guid userId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/EmailChangeBegin", ReplyAction="http://tempuri.org/IAuthorizeService/EmailChangeBeginResponse")]
        CryptxOnline.Web.AuthorizeService.EmailChangeResponse EmailChangeBegin(string email, System.Guid userId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/SmsConfirmation", ReplyAction="http://tempuri.org/IAuthorizeService/SmsConfirmationResponse")]
        CryptxOnline.Web.AuthorizeService.SmsConfirmationResponse SmsConfirmation(string pin, System.Guid smsConfirmationID, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/EmailChangeConfirmation", ReplyAction="http://tempuri.org/IAuthorizeService/EmailChangeConfirmationResponse")]
        CryptxOnline.Web.AuthorizeService.EmailChangeConfirmationResponse EmailChangeConfirmation(System.Guid confirmationKey, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/ResendSmsConfirmation", ReplyAction="http://tempuri.org/IAuthorizeService/ResendSmsConfirmationResponse")]
        CryptxOnline.Web.AuthorizeService.SmsConfirmationResponse ResendSmsConfirmation(System.Guid smsConfirmationID, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/DeactivateToken", ReplyAction="http://tempuri.org/IAuthorizeService/DeactivateTokenResponse")]
        void DeactivateToken(System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/LoginWithPIN", ReplyAction="http://tempuri.org/IAuthorizeService/LoginWithPINResponse")]
        bool LoginWithPIN(System.Guid token, string pinCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/LoginToKobilDevice", ReplyAction="http://tempuri.org/IAuthorizeService/LoginToKobilDeviceResponse")]
        CryptxOnline.Web.AuthorizeService.LoginResponse LoginToKobilDevice(string otp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/KobilLoginWithoutPassword", ReplyAction="http://tempuri.org/IAuthorizeService/KobilLoginWithoutPasswordResponse")]
        CryptxOnline.Web.AuthorizeService.LoginResponse KobilLoginWithoutPassword(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/CheckKobilAuth", ReplyAction="http://tempuri.org/IAuthorizeService/CheckKobilAuthResponse")]
        CryptxOnline.Web.AuthorizeService.KobilAuthResponse CheckKobilAuth(System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/CancelKobilAuth", ReplyAction="http://tempuri.org/IAuthorizeService/CancelKobilAuthResponse")]
        void CancelKobilAuth(System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/ResendPIN", ReplyAction="http://tempuri.org/IAuthorizeService/ResendPINResponse")]
        CryptxOnline.Web.AuthorizeService.ResendPinResponse ResendPIN(System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/SendTestSMS", ReplyAction="http://tempuri.org/IAuthorizeService/SendTestSMSResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CryptxOnline.Web.AuthorizeService.UserInfoResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CryptxOnline.Web.AuthorizeService.AccountResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CryptxOnline.Web.AuthorizeService.KobilAuthResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.NullReferenceException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Runtime.InteropServices.ExternalException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Runtime.InteropServices.COMException))]
        ElFinder.CryptxService.OldServiceResponse SendTestSMS(System.Guid userId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/GetUserData", ReplyAction="http://tempuri.org/IAuthorizeService/GetUserDataResponse")]
        CryptxOnline.Web.AuthorizeService.UserInfoResponse GetUserData(System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/GetUserDataByID", ReplyAction="http://tempuri.org/IAuthorizeService/GetUserDataByIDResponse")]
        CryptxOnline.Web.AuthorizeService.UserInfoResponse GetUserDataByID(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/GetAccount", ReplyAction="http://tempuri.org/IAuthorizeService/GetAccountResponse")]
        CryptxOnline.Web.AuthorizeService.AccountResponse GetAccount(System.Guid userId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/SaveAccount", ReplyAction="http://tempuri.org/IAuthorizeService/SaveAccountResponse")]
        bool SaveAccount(CryptxOnline.Web.AuthorizeService.Account account, System.Guid userId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/ChangePassword", ReplyAction="http://tempuri.org/IAuthorizeService/ChangePasswordResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CryptxOnline.Web.AuthorizeService.UserInfoResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CryptxOnline.Web.AuthorizeService.AccountResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CryptxOnline.Web.AuthorizeService.KobilAuthResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.SystemException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.NullReferenceException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Runtime.InteropServices.ExternalException))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Runtime.InteropServices.COMException))]
        ElFinder.CryptxService.OldServiceResponse ChangePassword(string oldPwd, string newPwd, System.Guid userId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/UniqueEmail", ReplyAction="http://tempuri.org/IAuthorizeService/UniqueEmailResponse")]
        bool UniqueEmail(string email, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/GetKobilActivation", ReplyAction="http://tempuri.org/IAuthorizeService/GetKobilActivationResponse")]
        CryptxOnline.Web.AuthorizeService.GetKobilActivationResponse GetKobilActivation(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/SendToSupport", ReplyAction="http://tempuri.org/IAuthorizeService/SendToSupportResponse")]
        CryptxOnline.Web.AuthorizeService.ServiceResponse SendToSupport(string name, string phone, string email, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/GetUserNotifications", ReplyAction="http://tempuri.org/IAuthorizeService/GetUserNotificationsResponse")]
        CryptxOnline.Web.AuthorizeService.GetUserNotificationResponse GetUserNotifications(System.Guid token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizeServiceChannel : CryptxOnline.Web.AuthorizeService.IAuthorizeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizeServiceClient : System.ServiceModel.ClientBase<CryptxOnline.Web.AuthorizeService.IAuthorizeService>, CryptxOnline.Web.AuthorizeService.IAuthorizeService {
        
        public AuthorizeServiceClient() {
        }
        
        public AuthorizeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorizeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CryptxOnline.Web.AuthorizeService.LoginResponse Login(string login1, string password) {
            return base.Channel.Login(login1, password);
        }
        
        public CryptxOnline.Web.AuthorizeService.CheckTokenResponse CheckToken(System.Guid token, System.Nullable<System.DateTime> roleChangeDateTime) {
            return base.Channel.CheckToken(token, roleChangeDateTime);
        }
        
        public CryptxOnline.Web.AuthorizeService.PhoneChangeResponse PhoneChangeBegin(string phoneNumber, System.Guid userId, System.Guid token) {
            return base.Channel.PhoneChangeBegin(phoneNumber, userId, token);
        }
        
        public CryptxOnline.Web.AuthorizeService.EmailChangeResponse EmailChangeBegin(string email, System.Guid userId, System.Guid token) {
            return base.Channel.EmailChangeBegin(email, userId, token);
        }
        
        public CryptxOnline.Web.AuthorizeService.SmsConfirmationResponse SmsConfirmation(string pin, System.Guid smsConfirmationID, System.Guid token) {
            return base.Channel.SmsConfirmation(pin, smsConfirmationID, token);
        }
        
        public CryptxOnline.Web.AuthorizeService.EmailChangeConfirmationResponse EmailChangeConfirmation(System.Guid confirmationKey, System.Guid token) {
            return base.Channel.EmailChangeConfirmation(confirmationKey, token);
        }
        
        public CryptxOnline.Web.AuthorizeService.SmsConfirmationResponse ResendSmsConfirmation(System.Guid smsConfirmationID, System.Guid token) {
            return base.Channel.ResendSmsConfirmation(smsConfirmationID, token);
        }
        
        public void DeactivateToken(System.Guid token) {
            base.Channel.DeactivateToken(token);
        }
        
        public bool LoginWithPIN(System.Guid token, string pinCode) {
            return base.Channel.LoginWithPIN(token, pinCode);
        }
        
        public CryptxOnline.Web.AuthorizeService.LoginResponse LoginToKobilDevice(string otp) {
            return base.Channel.LoginToKobilDevice(otp);
        }
        
        public CryptxOnline.Web.AuthorizeService.LoginResponse KobilLoginWithoutPassword(string login) {
            return base.Channel.KobilLoginWithoutPassword(login);
        }
        
        public CryptxOnline.Web.AuthorizeService.KobilAuthResponse CheckKobilAuth(System.Guid token) {
            return base.Channel.CheckKobilAuth(token);
        }
        
        public void CancelKobilAuth(System.Guid token) {
            base.Channel.CancelKobilAuth(token);
        }
        
        public CryptxOnline.Web.AuthorizeService.ResendPinResponse ResendPIN(System.Guid token) {
            return base.Channel.ResendPIN(token);
        }
        
        public ElFinder.CryptxService.OldServiceResponse SendTestSMS(System.Guid userId, System.Guid token) {
            return base.Channel.SendTestSMS(userId, token);
        }
        
        public CryptxOnline.Web.AuthorizeService.UserInfoResponse GetUserData(System.Guid token) {
            return base.Channel.GetUserData(token);
        }
        
        public CryptxOnline.Web.AuthorizeService.UserInfoResponse GetUserDataByID(System.Guid userId) {
            return base.Channel.GetUserDataByID(userId);
        }
        
        public CryptxOnline.Web.AuthorizeService.AccountResponse GetAccount(System.Guid userId, System.Guid token) {
            return base.Channel.GetAccount(userId, token);
        }
        
        public bool SaveAccount(CryptxOnline.Web.AuthorizeService.Account account, System.Guid userId, System.Guid token) {
            return base.Channel.SaveAccount(account, userId, token);
        }
        
        public ElFinder.CryptxService.OldServiceResponse ChangePassword(string oldPwd, string newPwd, System.Guid userId, System.Guid token) {
            return base.Channel.ChangePassword(oldPwd, newPwd, userId, token);
        }
        
        public bool UniqueEmail(string email, System.Guid token) {
            return base.Channel.UniqueEmail(email, token);
        }
        
        public CryptxOnline.Web.AuthorizeService.GetKobilActivationResponse GetKobilActivation(string email) {
            return base.Channel.GetKobilActivation(email);
        }
        
        public CryptxOnline.Web.AuthorizeService.ServiceResponse SendToSupport(string name, string phone, string email, string message) {
            return base.Channel.SendToSupport(name, phone, email, message);
        }
        
        public CryptxOnline.Web.AuthorizeService.GetUserNotificationResponse GetUserNotifications(System.Guid token) {
            return base.Channel.GetUserNotifications(token);
        }
    }
}
