//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CryptxOnline.Web.MarkerActivationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkerActivationResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.GetMarkerStatusResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.GetCertificateInfoResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.CreateRequestResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.GetMyCertificatesRequestsResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.GetRequestDataResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.GetUserHtmlResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.GetNSetCertificateResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.GetNSetTestCertificateResponse))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.LogonResponse))]
    public partial class MarkerActivationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.MarkerActivationError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.MainStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.MarkerActivationError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.MainStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkerActivationError", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Error")]
    [System.SerializableAttribute()]
    public partial class MarkerActivationError : CryptxOnline.Web.MarkerActivationService.ServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMarkerStatusResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class GetMarkerStatusResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.MarkerStatus MarkerStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.MarkerStatus MarkerStatus {
            get {
                return this.MarkerStatusField;
            }
            set {
                if ((this.MarkerStatusField.Equals(value) != true)) {
                    this.MarkerStatusField = value;
                    this.RaisePropertyChanged("MarkerStatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCertificateInfoResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class GetCertificateInfoResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CryptxOnline.Web.MarkerActivationService.GetCertificateInfoResponse.CertInfo> CertInfoDictionaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CertificateXMLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CryptxOnline.Web.MarkerActivationService.GetCertificateInfoResponse.CertInfo> CertInfoDictionary {
            get {
                return this.CertInfoDictionaryField;
            }
            set {
                if ((object.ReferenceEquals(this.CertInfoDictionaryField, value) != true)) {
                    this.CertInfoDictionaryField = value;
                    this.RaisePropertyChanged("CertInfoDictionary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertificateXML {
            get {
                return this.CertificateXMLField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificateXMLField, value) != true)) {
                    this.CertificateXMLField = value;
                    this.RaisePropertyChanged("CertificateXML");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="GetCertificateInfoResponse.CertInfo", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
        [System.SerializableAttribute()]
        public partial class CertInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FriendlyNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string OIdField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string ValueField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FriendlyName {
                get {
                    return this.FriendlyNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                        this.FriendlyNameField = value;
                        this.RaisePropertyChanged("FriendlyName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string OId {
                get {
                    return this.OIdField;
                }
                set {
                    if ((object.ReferenceEquals(this.OIdField, value) != true)) {
                        this.OIdField = value;
                        this.RaisePropertyChanged("OId");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Value {
                get {
                    return this.ValueField;
                }
                set {
                    if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                        this.ValueField = value;
                        this.RaisePropertyChanged("Value");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRequestResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class CreateRequestResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalInformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RequestIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.MemoryStream SessionDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInformation {
            get {
                return this.AdditionalInformationField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInformationField, value) != true)) {
                    this.AdditionalInformationField = value;
                    this.RaisePropertyChanged("AdditionalInformation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.MemoryStream SessionData {
            get {
                return this.SessionDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionDataField, value) != true)) {
                    this.SessionDataField = value;
                    this.RaisePropertyChanged("SessionData");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMyCertificatesRequestsResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class GetMyCertificatesRequestsResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CryptxOnline.Web.MarkerActivationService.GetMyCertificatesRequestsResponse.MyCertificateRequest> MyCertificateRequestsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CryptxOnline.Web.MarkerActivationService.GetMyCertificatesRequestsResponse.MyCertificateRequest> MyCertificateRequests {
            get {
                return this.MyCertificateRequestsField;
            }
            set {
                if ((object.ReferenceEquals(this.MyCertificateRequestsField, value) != true)) {
                    this.MyCertificateRequestsField = value;
                    this.RaisePropertyChanged("MyCertificateRequests");
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="GetMyCertificatesRequestsResponse.MyCertificateRequest", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
        [System.SerializableAttribute()]
        public partial class MyCertificateRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Nullable<System.DateTime> CreationTimeField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string EGRULField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string EmailField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private CryptxOnline.Web.MarkerActivationService.MarkerActivationError ErrorField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid IDField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string NameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PassportField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PaymentIDField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SNILSField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string StatusField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Nullable<System.DateTime> CreationTime {
                get {
                    return this.CreationTimeField;
                }
                set {
                    if ((this.CreationTimeField.Equals(value) != true)) {
                        this.CreationTimeField = value;
                        this.RaisePropertyChanged("CreationTime");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string EGRUL {
                get {
                    return this.EGRULField;
                }
                set {
                    if ((object.ReferenceEquals(this.EGRULField, value) != true)) {
                        this.EGRULField = value;
                        this.RaisePropertyChanged("EGRUL");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Email {
                get {
                    return this.EmailField;
                }
                set {
                    if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                        this.EmailField = value;
                        this.RaisePropertyChanged("Email");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public CryptxOnline.Web.MarkerActivationService.MarkerActivationError Error {
                get {
                    return this.ErrorField;
                }
                set {
                    if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                        this.ErrorField = value;
                        this.RaisePropertyChanged("Error");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid ID {
                get {
                    return this.IDField;
                }
                set {
                    if ((this.IDField.Equals(value) != true)) {
                        this.IDField = value;
                        this.RaisePropertyChanged("ID");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Name {
                get {
                    return this.NameField;
                }
                set {
                    if ((object.ReferenceEquals(this.NameField, value) != true)) {
                        this.NameField = value;
                        this.RaisePropertyChanged("Name");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Passport {
                get {
                    return this.PassportField;
                }
                set {
                    if ((object.ReferenceEquals(this.PassportField, value) != true)) {
                        this.PassportField = value;
                        this.RaisePropertyChanged("Passport");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PaymentID {
                get {
                    return this.PaymentIDField;
                }
                set {
                    if ((object.ReferenceEquals(this.PaymentIDField, value) != true)) {
                        this.PaymentIDField = value;
                        this.RaisePropertyChanged("PaymentID");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SNILS {
                get {
                    return this.SNILSField;
                }
                set {
                    if ((object.ReferenceEquals(this.SNILSField, value) != true)) {
                        this.SNILSField = value;
                        this.RaisePropertyChanged("SNILS");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Status {
                get {
                    return this.StatusField;
                }
                set {
                    if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                        this.StatusField = value;
                        this.RaisePropertyChanged("Status");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="GetMyCertificatesRequestsResponse.Sort", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
        public enum Sort : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NameASC = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NameDESC = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CreationDateASC = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            CreationDateDESC = 3,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetRequestDataResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class GetRequestDataResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserHtmlResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class GetUserHtmlResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserHtmlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserHtml {
            get {
                return this.UserHtmlField;
            }
            set {
                if ((object.ReferenceEquals(this.UserHtmlField, value) != true)) {
                    this.UserHtmlField = value;
                    this.RaisePropertyChanged("UserHtml");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNSetCertificateResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class GetNSetCertificateResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetNSetTestCertificateResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class GetNSetTestCertificateResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.CertificateInfo TestCertificateInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.CertificateInfo TestCertificateInfo {
            get {
                return this.TestCertificateInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.TestCertificateInfoField, value) != true)) {
                    this.TestCertificateInfoField = value;
                    this.RaisePropertyChanged("TestCertificateInfo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogonResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class LogonResponse : CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.MarkerStatus MarkerStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaskedPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.MemoryStream SessionDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.MarkerStatus MarkerStatus {
            get {
                return this.MarkerStatusField;
            }
            set {
                if ((this.MarkerStatusField.Equals(value) != true)) {
                    this.MarkerStatusField = value;
                    this.RaisePropertyChanged("MarkerStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaskedPhoneNumber {
            get {
                return this.MaskedPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MaskedPhoneNumberField, value) != true)) {
                    this.MaskedPhoneNumberField = value;
                    this.RaisePropertyChanged("MaskedPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.MemoryStream SessionData {
            get {
                return this.SessionDataField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionDataField, value) != true)) {
                    this.SessionDataField = value;
                    this.RaisePropertyChanged("SessionData");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MainStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    public enum MainStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedSmsConfirmation = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NeedRelogin = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WrongRequestId = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarkerStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    public enum MarkerStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotRecievedFromService = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_SEND = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEND = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IN_PROCESS = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REJECTED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONFIRMED = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Error")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.MarkerActivationService.MarkerActivationError))]
    public partial class ServiceError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CertificateInfo", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
    [System.SerializableAttribute()]
    public partial class CertificateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CertificateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.CertificateInfo.DecryptInfo DecryptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullSubjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string INNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IssureNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.CertificateInfo.MyCertificateInfo MyCertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NotAfterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime NotBeforeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrganizationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.MarkerActivationService.CertificateInfo.RecipientCertificateInfo RecipientCertificateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbprintField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CertificateId {
            get {
                return this.CertificateIdField;
            }
            set {
                if ((this.CertificateIdField.Equals(value) != true)) {
                    this.CertificateIdField = value;
                    this.RaisePropertyChanged("CertificateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.CertificateInfo.DecryptInfo Decrypt {
            get {
                return this.DecryptField;
            }
            set {
                if ((object.ReferenceEquals(this.DecryptField, value) != true)) {
                    this.DecryptField = value;
                    this.RaisePropertyChanged("Decrypt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullSubjectName {
            get {
                return this.FullSubjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullSubjectNameField, value) != true)) {
                    this.FullSubjectNameField = value;
                    this.RaisePropertyChanged("FullSubjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string INN {
            get {
                return this.INNField;
            }
            set {
                if ((object.ReferenceEquals(this.INNField, value) != true)) {
                    this.INNField = value;
                    this.RaisePropertyChanged("INN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTest {
            get {
                return this.IsTestField;
            }
            set {
                if ((this.IsTestField.Equals(value) != true)) {
                    this.IsTestField = value;
                    this.RaisePropertyChanged("IsTest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IssureName {
            get {
                return this.IssureNameField;
            }
            set {
                if ((object.ReferenceEquals(this.IssureNameField, value) != true)) {
                    this.IssureNameField = value;
                    this.RaisePropertyChanged("IssureName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.CertificateInfo.MyCertificateInfo MyCertificate {
            get {
                return this.MyCertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.MyCertificateField, value) != true)) {
                    this.MyCertificateField = value;
                    this.RaisePropertyChanged("MyCertificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NotAfter {
            get {
                return this.NotAfterField;
            }
            set {
                if ((this.NotAfterField.Equals(value) != true)) {
                    this.NotAfterField = value;
                    this.RaisePropertyChanged("NotAfter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NotBefore {
            get {
                return this.NotBeforeField;
            }
            set {
                if ((this.NotBeforeField.Equals(value) != true)) {
                    this.NotBeforeField = value;
                    this.RaisePropertyChanged("NotBefore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.MarkerActivationService.CertificateInfo.RecipientCertificateInfo RecipientCertificate {
            get {
                return this.RecipientCertificateField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipientCertificateField, value) != true)) {
                    this.RecipientCertificateField = value;
                    this.RaisePropertyChanged("RecipientCertificate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectName {
            get {
                return this.SubjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectNameField, value) != true)) {
                    this.SubjectNameField = value;
                    this.RaisePropertyChanged("SubjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Thumbprint {
            get {
                return this.ThumbprintField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbprintField, value) != true)) {
                    this.ThumbprintField = value;
                    this.RaisePropertyChanged("Thumbprint");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CertificateInfo.DecryptInfo", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
        [System.SerializableAttribute()]
        public partial class DecryptInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string IssuerField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string PublicKeyAlgorithmField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string SerialNumberField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string Issuer {
                get {
                    return this.IssuerField;
                }
                set {
                    if ((object.ReferenceEquals(this.IssuerField, value) != true)) {
                        this.IssuerField = value;
                        this.RaisePropertyChanged("Issuer");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string PublicKeyAlgorithm {
                get {
                    return this.PublicKeyAlgorithmField;
                }
                set {
                    if ((object.ReferenceEquals(this.PublicKeyAlgorithmField, value) != true)) {
                        this.PublicKeyAlgorithmField = value;
                        this.RaisePropertyChanged("PublicKeyAlgorithm");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string SerialNumber {
                get {
                    return this.SerialNumberField;
                }
                set {
                    if ((object.ReferenceEquals(this.SerialNumberField, value) != true)) {
                        this.SerialNumberField = value;
                        this.RaisePropertyChanged("SerialNumber");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CertificateInfo.MyCertificateInfo", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
        [System.SerializableAttribute()]
        public partial class MyCertificateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FriendlyNameField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private bool HasPINField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private System.Guid IdField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FriendlyName {
                get {
                    return this.FriendlyNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                        this.FriendlyNameField = value;
                        this.RaisePropertyChanged("FriendlyName");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public bool HasPIN {
                get {
                    return this.HasPINField;
                }
                set {
                    if ((this.HasPINField.Equals(value) != true)) {
                        this.HasPINField = value;
                        this.RaisePropertyChanged("HasPIN");
                    }
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public System.Guid Id {
                get {
                    return this.IdField;
                }
                set {
                    if ((this.IdField.Equals(value) != true)) {
                        this.IdField = value;
                        this.RaisePropertyChanged("Id");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="CertificateInfo.RecipientCertificateInfo", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Helper")]
        [System.SerializableAttribute()]
        public partial class RecipientCertificateInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
            
            [System.NonSerializedAttribute()]
            private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
            
            [System.Runtime.Serialization.OptionalFieldAttribute()]
            private string FriendlyNameField;
            
            public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
                get {
                    return this.extensionDataField;
                }
                set {
                    this.extensionDataField = value;
                }
            }
            
            [System.Runtime.Serialization.DataMemberAttribute()]
            public string FriendlyName {
                get {
                    return this.FriendlyNameField;
                }
                set {
                    if ((object.ReferenceEquals(this.FriendlyNameField, value) != true)) {
                        this.FriendlyNameField = value;
                        this.RaisePropertyChanged("FriendlyName");
                    }
                }
            }
            
            public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
            
            protected void RaisePropertyChanged(string propertyName) {
                System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
                if ((propertyChanged != null)) {
                    propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateRequestParams", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response.MarkerActivation")]
    [System.SerializableAttribute()]
    public partial class CreateRequestParams : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SavepinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SendSmsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pin {
            get {
                return this.PinField;
            }
            set {
                if ((object.ReferenceEquals(this.PinField, value) != true)) {
                    this.PinField = value;
                    this.RaisePropertyChanged("Pin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Savepin {
            get {
                return this.SavepinField;
            }
            set {
                if ((this.SavepinField.Equals(value) != true)) {
                    this.SavepinField = value;
                    this.RaisePropertyChanged("Savepin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendEmail {
            get {
                return this.SendEmailField;
            }
            set {
                if ((this.SendEmailField.Equals(value) != true)) {
                    this.SendEmailField = value;
                    this.RaisePropertyChanged("SendEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SendSms {
            get {
                return this.SendSmsField;
            }
            set {
                if ((this.SendSmsField.Equals(value) != true)) {
                    this.SendSmsField = value;
                    this.RaisePropertyChanged("SendSms");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MarkerActivationService.IMarkerActivationService")]
    public interface IMarkerActivationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/LogOn", ReplyAction="http://tempuri.org/IMarkerActivationService/LogOnResponse")]
        CryptxOnline.Web.MarkerActivationService.LogonResponse LogOn(string login, string password, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/CheckSms", ReplyAction="http://tempuri.org/IMarkerActivationService/CheckSmsResponse")]
        CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse CheckSms(string pin, System.IO.MemoryStream session, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetMarkerStatus", ReplyAction="http://tempuri.org/IMarkerActivationService/GetMarkerStatusResponse")]
        CryptxOnline.Web.MarkerActivationService.GetMarkerStatusResponse GetMarkerStatus(string login, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetCertificateInfo", ReplyAction="http://tempuri.org/IMarkerActivationService/GetCertificateInfoResponse")]
        CryptxOnline.Web.MarkerActivationService.GetCertificateInfoResponse GetCertificateInfo(System.IO.MemoryStream session, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetCertificateInfoByLogin", ReplyAction="http://tempuri.org/IMarkerActivationService/GetCertificateInfoByLoginResponse")]
        CryptxOnline.Web.MarkerActivationService.GetCertificateInfoResponse GetCertificateInfoByLogin(System.Guid requestId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/CreateRequest", ReplyAction="http://tempuri.org/IMarkerActivationService/CreateRequestResponse")]
        CryptxOnline.Web.MarkerActivationService.CreateRequestResponse CreateRequest(System.IO.MemoryStream session, CryptxOnline.Web.MarkerActivationService.CreateRequestParams param, string userInfoXML, System.Guid token, bool exportable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/ResendRequest", ReplyAction="http://tempuri.org/IMarkerActivationService/ResendRequestResponse")]
        CryptxOnline.Web.MarkerActivationService.CreateRequestResponse ResendRequest(System.Guid requestId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/ResendRequestPhpSessionLogin", ReplyAction="http://tempuri.org/IMarkerActivationService/ResendRequestPhpSessionLoginResponse")]
        CryptxOnline.Web.MarkerActivationService.CreateRequestResponse ResendRequestPhpSessionLogin(System.Guid requestId, System.IO.MemoryStream session, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetMyCertificatesRequests", ReplyAction="http://tempuri.org/IMarkerActivationService/GetMyCertificatesRequestsResponse")]
        CryptxOnline.Web.MarkerActivationService.GetMyCertificatesRequestsResponse GetMyCertificatesRequests(CryptxOnline.Web.MarkerActivationService.GetMyCertificatesRequestsResponse.Sort sort, System.Guid userId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetRequestData", ReplyAction="http://tempuri.org/IMarkerActivationService/GetRequestDataResponse")]
        CryptxOnline.Web.MarkerActivationService.GetRequestDataResponse GetRequestData(System.Guid requestId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/DeleteRequest", ReplyAction="http://tempuri.org/IMarkerActivationService/DeleteRequestResponse")]
        CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse DeleteRequest(System.Guid requestId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetUserHtml", ReplyAction="http://tempuri.org/IMarkerActivationService/GetUserHtmlResponse")]
        CryptxOnline.Web.MarkerActivationService.GetUserHtmlResponse GetUserHtml(System.Guid requestId, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/ResendSms", ReplyAction="http://tempuri.org/IMarkerActivationService/ResendSmsResponse")]
        CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse ResendSms(System.IO.MemoryStream session, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetNSetCertificate", ReplyAction="http://tempuri.org/IMarkerActivationService/GetNSetCertificateResponse")]
        CryptxOnline.Web.MarkerActivationService.GetNSetCertificateResponse GetNSetCertificate(System.Guid requestId, string pin, System.Guid token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMarkerActivationService/GetNSetTestCertificate", ReplyAction="http://tempuri.org/IMarkerActivationService/GetNSetTestCertificateResponse")]
        CryptxOnline.Web.MarkerActivationService.GetNSetTestCertificateResponse GetNSetTestCertificate(string pin, System.Guid token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMarkerActivationServiceChannel : CryptxOnline.Web.MarkerActivationService.IMarkerActivationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarkerActivationServiceClient : System.ServiceModel.ClientBase<CryptxOnline.Web.MarkerActivationService.IMarkerActivationService>, CryptxOnline.Web.MarkerActivationService.IMarkerActivationService {
        
        public MarkerActivationServiceClient() {
        }
        
        public MarkerActivationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MarkerActivationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarkerActivationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MarkerActivationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CryptxOnline.Web.MarkerActivationService.LogonResponse LogOn(string login, string password, System.Guid token) {
            return base.Channel.LogOn(login, password, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse CheckSms(string pin, System.IO.MemoryStream session, System.Guid token) {
            return base.Channel.CheckSms(pin, session, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetMarkerStatusResponse GetMarkerStatus(string login, System.Guid token) {
            return base.Channel.GetMarkerStatus(login, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetCertificateInfoResponse GetCertificateInfo(System.IO.MemoryStream session, System.Guid token) {
            return base.Channel.GetCertificateInfo(session, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetCertificateInfoResponse GetCertificateInfoByLogin(System.Guid requestId, System.Guid token) {
            return base.Channel.GetCertificateInfoByLogin(requestId, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.CreateRequestResponse CreateRequest(System.IO.MemoryStream session, CryptxOnline.Web.MarkerActivationService.CreateRequestParams param, string userInfoXML, System.Guid token, bool exportable) {
            return base.Channel.CreateRequest(session, param, userInfoXML, token, exportable);
        }
        
        public CryptxOnline.Web.MarkerActivationService.CreateRequestResponse ResendRequest(System.Guid requestId, System.Guid token) {
            return base.Channel.ResendRequest(requestId, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.CreateRequestResponse ResendRequestPhpSessionLogin(System.Guid requestId, System.IO.MemoryStream session, System.Guid token) {
            return base.Channel.ResendRequestPhpSessionLogin(requestId, session, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetMyCertificatesRequestsResponse GetMyCertificatesRequests(CryptxOnline.Web.MarkerActivationService.GetMyCertificatesRequestsResponse.Sort sort, System.Guid userId, System.Guid token) {
            return base.Channel.GetMyCertificatesRequests(sort, userId, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetRequestDataResponse GetRequestData(System.Guid requestId, System.Guid token) {
            return base.Channel.GetRequestData(requestId, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse DeleteRequest(System.Guid requestId, System.Guid token) {
            return base.Channel.DeleteRequest(requestId, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetUserHtmlResponse GetUserHtml(System.Guid requestId, System.Guid token) {
            return base.Channel.GetUserHtml(requestId, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.MarkerActivationResponse ResendSms(System.IO.MemoryStream session, System.Guid token) {
            return base.Channel.ResendSms(session, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetNSetCertificateResponse GetNSetCertificate(System.Guid requestId, string pin, System.Guid token) {
            return base.Channel.GetNSetCertificate(requestId, pin, token);
        }
        
        public CryptxOnline.Web.MarkerActivationService.GetNSetTestCertificateResponse GetNSetTestCertificate(string pin, System.Guid token) {
            return base.Channel.GetNSetTestCertificate(pin, token);
        }
    }
}
