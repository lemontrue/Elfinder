//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CryptxOnline.Web.RegistrationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationModel", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RegistrationModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIO {
            get {
                return this.FIOField;
            }
            set {
                if ((object.ReferenceEquals(this.FIOField, value) != true)) {
                    this.FIOField = value;
                    this.RaisePropertyChanged("FIO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    public partial class RegistrationResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid AuthTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.RegistrationService.RegistrationServiceError ErrorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RoleChangeDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid SmsConfirmationTokenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CryptxOnline.Web.RegistrationService.RegistrationResponse.RegistrationStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid AuthToken {
            get {
                return this.AuthTokenField;
            }
            set {
                if ((this.AuthTokenField.Equals(value) != true)) {
                    this.AuthTokenField = value;
                    this.RaisePropertyChanged("AuthToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.RegistrationService.RegistrationServiceError Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RoleChangeDateTime {
            get {
                return this.RoleChangeDateTimeField;
            }
            set {
                if ((this.RoleChangeDateTimeField.Equals(value) != true)) {
                    this.RoleChangeDateTimeField = value;
                    this.RaisePropertyChanged("RoleChangeDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid SmsConfirmationToken {
            get {
                return this.SmsConfirmationTokenField;
            }
            set {
                if ((this.SmsConfirmationTokenField.Equals(value) != true)) {
                    this.SmsConfirmationTokenField = value;
                    this.RaisePropertyChanged("SmsConfirmationToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CryptxOnline.Web.RegistrationService.RegistrationResponse.RegistrationStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationResponse.RegistrationStatus", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
        public enum RegistrationStatus : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Success = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Fail = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            PhoneNumberBusy = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            ConfirmationNotFoundInDB = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmsConfirmationExpire = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            WrongSmsPIN = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            SmsAttemptCountOverFlow = 6,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegistrationServiceError", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Error")]
    [System.SerializableAttribute()]
    public partial class RegistrationServiceError : CryptxOnline.Web.RegistrationService.ServiceError {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceError", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Error")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CryptxOnline.Web.RegistrationService.RegistrationServiceError))]
    public partial class ServiceError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetCityListResponse", Namespace="http://schemas.datacontract.org/2004/07/DSS.Service.Response")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.SystemException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.NullReferenceException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.ArgumentException))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.ArgumentNullException))]
    public partial class GetCityListResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> CitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Cities {
            get {
                return this.CitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.CitiesField, value) != true)) {
                    this.CitiesField = value;
                    this.RaisePropertyChanged("Cities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception Error {
            get {
                return this.ErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorField, value) != true)) {
                    this.ErrorField = value;
                    this.RaisePropertyChanged("Error");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RegistrationService.IRegistrationService")]
    public interface IRegistrationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/Registration", ReplyAction="http://tempuri.org/IRegistrationService/RegistrationResponse")]
        CryptxOnline.Web.RegistrationService.RegistrationResponse Registration(CryptxOnline.Web.RegistrationService.RegistrationModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/GetCityList", ReplyAction="http://tempuri.org/IRegistrationService/GetCityListResponse")]
        CryptxOnline.Web.RegistrationService.GetCityListResponse GetCityList(string pattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/CheckRegistrationPhoneNEmail", ReplyAction="http://tempuri.org/IRegistrationService/CheckRegistrationPhoneNEmailResponse")]
        CryptxOnline.Web.RegistrationService.RegistrationResponse CheckRegistrationPhoneNEmail(string phoneNumber, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/CheckRegistrationEmail", ReplyAction="http://tempuri.org/IRegistrationService/CheckRegistrationEmailResponse")]
        CryptxOnline.Web.RegistrationService.RegistrationResponse CheckRegistrationEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/SmsPhoneConfirmation", ReplyAction="http://tempuri.org/IRegistrationService/SmsPhoneConfirmationResponse")]
        CryptxOnline.Web.RegistrationService.RegistrationResponse SmsPhoneConfirmation(string smsConfirmationData, System.Guid smsConfirmationToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegistrationService/SmsRegistrationResend", ReplyAction="http://tempuri.org/IRegistrationService/SmsRegistrationResendResponse")]
        CryptxOnline.Web.RegistrationService.RegistrationResponse SmsRegistrationResend(System.Guid smsConfirmationToken);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegistrationServiceChannel : CryptxOnline.Web.RegistrationService.IRegistrationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegistrationServiceClient : System.ServiceModel.ClientBase<CryptxOnline.Web.RegistrationService.IRegistrationService>, CryptxOnline.Web.RegistrationService.IRegistrationService {
        
        public RegistrationServiceClient() {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegistrationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CryptxOnline.Web.RegistrationService.RegistrationResponse Registration(CryptxOnline.Web.RegistrationService.RegistrationModel model) {
            return base.Channel.Registration(model);
        }
        
        public CryptxOnline.Web.RegistrationService.GetCityListResponse GetCityList(string pattern) {
            return base.Channel.GetCityList(pattern);
        }
        
        public CryptxOnline.Web.RegistrationService.RegistrationResponse CheckRegistrationPhoneNEmail(string phoneNumber, string email) {
            return base.Channel.CheckRegistrationPhoneNEmail(phoneNumber, email);
        }
        
        public CryptxOnline.Web.RegistrationService.RegistrationResponse CheckRegistrationEmail(string email) {
            return base.Channel.CheckRegistrationEmail(email);
        }
        
        public CryptxOnline.Web.RegistrationService.RegistrationResponse SmsPhoneConfirmation(string smsConfirmationData, System.Guid smsConfirmationToken) {
            return base.Channel.SmsPhoneConfirmation(smsConfirmationData, smsConfirmationToken);
        }
        
        public CryptxOnline.Web.RegistrationService.RegistrationResponse SmsRegistrationResend(System.Guid smsConfirmationToken) {
            return base.Channel.SmsRegistrationResend(smsConfirmationToken);
        }
    }
}
